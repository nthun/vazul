% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mask_variables.R
\name{mask_variables}
\alias{mask_variables}
\title{Mask categorical variables with random labels in a data frame}
\usage{
mask_variables(data, cols, shared_labels = FALSE, prefix = "masked_group_")
}
\arguments{
\item{data}{a data frame}

\item{cols}{\if{html}{\out{<tidy-select>}} Columns to mask. Accepts column names, positions,
or tidyselect helpers like \code{starts_with()}, \code{contains()},
\code{where()}, etc. Only character and factor columns will be
processed.}

\item{shared_labels}{logical. If \code{TRUE}, all selected variables will use
the same set of masked labels. If \code{FALSE} (default), each variable
gets its own independent set of masked labels using the column name as
prefix.}

\item{prefix}{character string to use as prefix for masked labels when
\code{shared_labels = TRUE}. Default is "masked_group_". For independent
masking, column names are used as prefixes.}
}
\value{
A data frame with the specified categorical columns masked.
Non-categorical columns in the selection are left unchanged with a
warning.
}
\description{
Applies masked labels to multiple categorical variables in a data frame using
the \code{mask_labels()} function. Each variable gets independent random
masked labels by default, or can optionally use the same masked labels
across all selected variables.
}
\examples{

# Create example data
df <- data.frame(
  treatment = c("control", "intervention", "control"),
  outcome = c("success", "failure", "success"),
  score = c(1, 2, 3)  # numeric, won't be masked
)

set.seed(123)
# Independent masking for each variable (default - uses column names as prefixes)
mask_variables(df, c("treatment", "outcome"))

set.seed(456)
# Shared masking across variables (uses provided prefix)
mask_variables(df, c("treatment", "outcome"), shared_labels = TRUE)

set.seed(789)
# Custom prefix for shared masking
mask_variables(df, c("treatment", "outcome"), shared_labels = TRUE, prefix = "group_")

# Using tidyselect helpers
mask_variables(df, where(is.character))

# Example with williams dataset
data(williams)
set.seed(123)
williams_masked <- mask_variables(williams, c("ecology", "gender"))
head(williams_masked[c("ecology", "gender")])

}
